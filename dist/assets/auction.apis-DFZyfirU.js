import{t as r,D as o,ai as c,al as n,a2 as a}from"./index-DnNoBgXv.js";const E=async t=>{try{const e=await r.post(`${o}/auctions`,t,{headers:{Authorization:`Bearer ${c()}`}});if(e.status!==201)throw new Error("Failed to create new auction");return e.data}catch(e){n(e,a.UNEXPECTED_ERROR,!0,a.CREATE_AUCTION_ERROR)}},R=async(t,e)=>(await r.get(`${o}/auctions`,{params:{page:t,limit:e}})).data.data,A=async(t,e,s)=>{try{return(await r.get(`${o}/auctions/koi_register`,{params:{page:t,limit:e,status:s},headers:{Authorization:`Bearer ${c()}`}})).data}catch(i){n(i,a.UNEXPECTED_ERROR,!1,a.FETCH_AUCTION_BY_STATUS_ERROR)}},_=async t=>(await r.get(`${o}/auctions/${t}`)).data.data,d=async(t,e)=>{try{const s=await r.put(`${o}/auctions/${t}`,e,{headers:{Authorization:`Bearer ${c()}`}})}catch(s){n(s,a.UNEXPECTED_ERROR,!1,a.UPDATE_AUCTION_ERROR)}},T=async(t,e)=>{try{(await r.delete(`${o}/auctions/${t}`,{headers:{Authorization:`Bearer ${e}`}})).status===204&&console.log("Auction deleted successfully")}catch(s){n(s,a.UNEXPECTED_ERROR,!0,a.DELETE_AUCTION_ERROR)}},h=async t=>{try{return(await r.put(`${o}/auctions/end/${t}`,{},{headers:{Authorization:`Bearer ${c()}`}})).data}catch(e){n(e,a.UNEXPECTED_ERROR,!0,a.END_AUCTION_ERROR)}},p=async()=>{try{return(await r.get(`${o}/auctions/count-by-auction-status`)).data}catch(t){n(t,a.UNEXPECTED_ERROR,!1,a.FETCH_AUCTION_STATUS_COUNT_ERROR)}};export{_ as a,p as b,E as c,T as d,h as e,R as f,A as g,d as u};
